{"map":"{\"version\":3,\"sources\":[\"/Users/pk/projects2020/my-website/src/logo.js\",\"/Users/pk/projects2020/my-website/src/App.js\",\"/Users/pk/projects2020/my-website/src/serviceWorker.js\",\"/Users/pk/projects2020/my-website/src/index.js\"],\"names\":[\"logo\",\"_ref\",\"width\",\"height\",\"Object\",\"index_esm\",\"fill\",\"d\",\"stroke\",\"version\",\"viewBox\",\"preserveAspectRatio\",\"App\",\"concat\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4NAAeA,EAAA,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,OACvB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAA,MAGO,eAHdA,OAAAC,EAAA,EAAAD,CAAA,GAAA,IAAA,KAAA,CAAAA,OAAAC,EAAA,EAAAD,CAAA,GAAA,OAAA,KAAA,KAAA,EAAA,CAAAE,KAWa,UAXbC,EAYU,8ZAZVH,OAAAC,EAAA,EAAAD,CAAA,GAAA,OAAA,KAAA,KAAA,EAAA,CAAAG,EAeU,umBAfVD,KAgBa,aAhBb,EAAA,CAAAA,KASY,UATZE,OAS6B,SAT7B,EAAA,CAAAC,QAEY,MAFZC,QAIY,cAJZR,MAKWA,EALXC,OAMYA,EANZQ,oBAOwB,4dCYXC,+JAdX,OAAOR,OAAAC,EAAA,EAAAD,CAAA,EAAA,MACU,MADjBA,OAAAC,EAAA,EAAAD,CAAA,EAAA,SAEsB,aAFtB,CAAAA,OAAAC,EAAA,EAAAD,CAAA,EAAAJ,EAAA,CAAAE,MAGkB,KAHlBC,OAG8B,OAH9BC,OAAAC,EAAA,EAAAD,CAAA,EAAA,IAAA,KAAA,sBAAAS,OAIgCJ,EAAAA,GAJhC,GAAAL,OAAAC,EAAA,EAAAD,CAAA,EAAA,IAAA,KAAA,CAAAA,OAAAC,EAAA,EAAAD,CAAA,SAAAA,OAAAC,EAAA,EAAAD,CAAA,EAAA,OAAA,KAAA,aAAA,IAAAA,OAAAC,EAAA,EAAAD,CAAA,yBAAA,IAAA,GAAA,UAFcU,EAAAA,GCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,OAAAA,EAAAA,EAAAA,CAAOhB,OAAAC,EAAA,EAAAD,CAAA,EAAAiB,GAASC,SAASC,eAAe,SDwHlC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"export default ({ width, height }) => {\\n  return (\\n    <svg\\n      version=\\\"1.0\\\"\\n      className=\\\"inferno-logo\\\"\\n      viewBox=\\\"0 0 320 320\\\"\\n      width={width}\\n      height={height}\\n      preserveAspectRatio=\\\"xMidYMid meet\\\"\\n    >\\n      <g fill=\\\"#494949\\\" stroke=\\\"none\\\">\\n        <path\\n          fill=\\\"#FF3232\\\"\\n          d=\\\"m144.9 258.5c-43.4-6.1-78.3-46.3-79.2-90-0.7-25.3 8.3-51.7 27-69.1-2 10-8.4 22.4-6.5 34.1 0 14.4 13.7 28.5 28.5 24.6 13.3-3.2 18.3-18.8 14.7-30.8-3.6-16.3-12.1-31.8-9.6-49 2.4-32.4 26.9-58 53.9-73.3 5.5-4 3.6-0.7 1.1 3.2-9.2 14.9-10.5 34-2.6 49.7 11.5 27 34 50.4 35.3 81 0.3 6.3-1.9 22.4 7.3 12 14.6-13.6 13.5-36.2 6.9-53.5-1.8-9.7 9.9 6.6 12.8 9.4 25.3 31.7 26.7 79.9 2.7 112.8-20.1 29.2-57.2 44.9-92.1 38.9z\\\"\\n        />\\n        <path\\n          d=\\\"M139.3 315.4C82.4 307.7 34.8 268.1 16.4 213.1 10.7 196 9.1 185.5 9 165.5c0-12.5 0.4-19.6 1.8-27 11-59.3 54.6-106 112.4-120.6 6.3-1.6 12-2.9 12.8-2.9 2.5 0 1.5 2.1-3.5 7.6-10.7 11.7-19.3 27.7-22.8 42.3l-1.7 7.4-7 4.8C77.3 93 61.3 117.3 56 145.1c-1.9 9.8-2.1 29-0.5 38.1 7.9 43.8 41.7 78.1 85 86.3 16.8 3.2 38.6 1.5 54.3-4.1 31.8-11.4 56-36.3 66-67.9 3.7-11.8 4.8-19.2 4.8-32.3 0-24.5-7-45.2-21.8-64.9-12.9-17.1-28.6-27.9-54.5-37.5-3.3-1.2-7.3-9.7-9.4-19.8-1.6-7.8-0.9-15.2 2.1-22.7 1.5-3.7 2.1-4.2 4.8-4.2 4.9 0 20.8 4.6 31.5 9 45.6 19 79.3 59.9 89.9 109 3.3 15.1 3.7 43.1 0.9 58-14.9 80.2-89.5 134.4-169.9 123.5z\\\"\\n          fill=\\\"#494949\\\"\\n        />\\n      </g>\\n    </svg>\\n  );\\n};\\n\",\"import { version, Component } from 'inferno';\\nimport Logo from './logo';\\nimport './App.css';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <header className=\\\"App-header\\\">\\n          <Logo width=\\\"80\\\" height=\\\"80\\\" />\\n          <p>{`Welcome to Inferno ${version}`}</p>\\n          <p>\\n            Edit <code>src/App.js</code> and save to reload.\\n          </p>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import { render } from 'inferno';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nrender(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,function(t,e,n){t.exports=n(9)},function(t,e,n){},function(t,e,n){},function(t,e,n){\"use strict\";n.r(e);var c=n(0),o=(n(7),n(2)),r=n(3),i=n(5),a=n(4),l=n(1),u=function(t){var e=t.width,n=t.height;return Object(c.d)(32,\"svg\",\"inferno-logo\",Object(c.d)(32,\"g\",null,[Object(c.d)(32,\"path\",null,null,1,{fill:\"#FF3232\",d:\"m144.9 258.5c-43.4-6.1-78.3-46.3-79.2-90-0.7-25.3 8.3-51.7 27-69.1-2 10-8.4 22.4-6.5 34.1 0 14.4 13.7 28.5 28.5 24.6 13.3-3.2 18.3-18.8 14.7-30.8-3.6-16.3-12.1-31.8-9.6-49 2.4-32.4 26.9-58 53.9-73.3 5.5-4 3.6-0.7 1.1 3.2-9.2 14.9-10.5 34-2.6 49.7 11.5 27 34 50.4 35.3 81 0.3 6.3-1.9 22.4 7.3 12 14.6-13.6 13.5-36.2 6.9-53.5-1.8-9.7 9.9 6.6 12.8 9.4 25.3 31.7 26.7 79.9 2.7 112.8-20.1 29.2-57.2 44.9-92.1 38.9z\"}),Object(c.d)(32,\"path\",null,null,1,{d:\"M139.3 315.4C82.4 307.7 34.8 268.1 16.4 213.1 10.7 196 9.1 185.5 9 165.5c0-12.5 0.4-19.6 1.8-27 11-59.3 54.6-106 112.4-120.6 6.3-1.6 12-2.9 12.8-2.9 2.5 0 1.5 2.1-3.5 7.6-10.7 11.7-19.3 27.7-22.8 42.3l-1.7 7.4-7 4.8C77.3 93 61.3 117.3 56 145.1c-1.9 9.8-2.1 29-0.5 38.1 7.9 43.8 41.7 78.1 85 86.3 16.8 3.2 38.6 1.5 54.3-4.1 31.8-11.4 56-36.3 66-67.9 3.7-11.8 4.8-19.2 4.8-32.3 0-24.5-7-45.2-21.8-64.9-12.9-17.1-28.6-27.9-54.5-37.5-3.3-1.2-7.3-9.7-9.4-19.8-1.6-7.8-0.9-15.2 2.1-22.7 1.5-3.7 2.1-4.2 4.8-4.2 4.9 0 20.8 4.6 31.5 9 45.6 19 79.3 59.9 89.9 109 3.3 15.1 3.7 43.1 0.9 58-14.9 80.2-89.5 134.4-169.9 123.5z\",fill:\"#494949\"})],4,{fill:\"#494949\",stroke:\"none\"}),2,{version:\"1.0\",viewBox:\"0 0 320 320\",width:e,height:n,preserveAspectRatio:\"xMidYMid meet\"})};n(8);function d(t){var e=function(){if(\"undefined\"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}();return function(){var n,c=Object(l.a)(t);if(e){var o=Object(l.a)(this).constructor;n=Reflect.construct(c,arguments,o)}else n=c.apply(this,arguments);return Object(a.a)(this,n)}}var s=function(t){Object(i.a)(n,t);var e=d(n);function n(){return Object(o.a)(this,n),e.apply(this,arguments)}return Object(r.a)(n,[{key:\"render\",value:function(){return Object(c.d)(1,\"div\",\"App\",Object(c.d)(1,\"header\",\"App-header\",[Object(c.b)(2,u,{width:\"80\",height:\"80\"}),Object(c.d)(1,\"p\",null,\"Welcome to Inferno \".concat(c.f),0),Object(c.d)(1,\"p\",null,[Object(c.c)(\"Edit \"),Object(c.d)(1,\"code\",null,\"src/App.js\",16),Object(c.c)(\" and save to reload.\")],4)],4),2)}}]),n}(c.a);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));Object(c.e)(Object(c.b)(2,s),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}],[[6,1,2]]]);","extractedComments":[]}